brief:
  working_title: "KISS"
  angle: |
    Explores in greater depth what it means to keep something 'simple' as originally described in the kcd.md post.
    - What does it mean in the context of software product development?
      - architecture
      - human organization
      - processes & workflow
      - design patterns
      - modularity
    - Complexity = Cost
      - speculation without sufficient clarity
      - onerousness encourages neglect
      - creates confusion
      - challenging to communicate concepts, intent, and rationale
      - impact of not addressing some concern
      - alternatives to addressing some concern
    - ROI
      - not all complexity is inherently bad
      - what is the return on the investment of time, money, effort (people)?
      - what are the dependent inverse variables
      - what are the trade-offs (i.e., Do no harm)
  audience: "software product managers and owners, software developers and engineers"
  purpose: "educate"
  must_include: ["KISS", "simple", "complexity", "cost", "trade-offs", "do no harm", "return on investment"]
  avoid: ["em dashes", "colons", "semicolons", "exclamation marks"]
  length: "500–1,000 words"
  structure: "intro + 3–5 sections + close"
  voice_dials:
    energy: "measured"
    humor: "light"
    personal_anecdotes: "allowed"
    formality: "informal"
  research_mode: "off"  # set to "on" to allow browsing + citations