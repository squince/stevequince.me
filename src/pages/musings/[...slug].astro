---
import { type CollectionEntry, getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';
import { render } from 'astro:content';

export async function getStaticPaths() {
	const posts = await getCollection('musings');
	const sortedPosts = posts
		.filter((post) => post.data.postReady)
		.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
	
	return sortedPosts.map((post, index) => {
		const prevPost = index < sortedPosts.length - 1 ? sortedPosts[index + 1] : null;
		const nextPost = index > 0 ? sortedPosts[index - 1] : null;
		
		return {
			params: { slug: post.id },
			props: { 
				post,
				prevPost: prevPost ? { id: prevPost.id, title: prevPost.data.title } : null,
				nextPost: nextPost ? { id: nextPost.id, title: nextPost.data.title } : null
			},
		};
	});
}

type Props = {
	post: CollectionEntry<'musings'>;
	prevPost: { id: string; title: string } | null;
	nextPost: { id: string; title: string } | null;
};

const { post, prevPost, nextPost } = Astro.props;
const { Content } = await render(post);
---

<BlogPost {...post.data} prevPost={prevPost} nextPost={nextPost}>
	<Content />
</BlogPost>
